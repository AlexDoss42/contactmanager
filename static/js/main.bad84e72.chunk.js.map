{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound1.js","components/Test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","onShowClick","e","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","react_router_dom","to","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","Header","branding","href","About","NotFound1","Test","console","log","App","context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bad84e72.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'DELETE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n      case 'ADD_CONTACT':\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n      case 'UPDATE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact)\n      }\n    default: \n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action =>\n      this.setState(state => reducer(state, action))\n    };\n\n    async componentDidMount() {\n      const res = await axios.get\n      ('https://jsonplaceholder.typicode.com/users');\n\n      this.setState({contacts: res.data});\n    }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Consumer } from '../../context';\nimport axios from 'axios';\n\nclass Contact extends Component{\n  state = {\n    showContactInfo: false\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    try {\n      await axios.delete\n      (`https://jsonplaceholder.typicode.com/users/${id}`);\n\n      dispatch({type: 'DELETE_CONTACT', payload: id});\n    } catch(e) {\n      dispatch({type: 'DELETE_CONTACT', payload: id});\n    }\n  };\n\n\n  onShowClick = e => {\n    this.setState({showContactInfo: !this.state.showContactInfo });\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n    \n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className='card card-body mb-3'>\n        \n              <h4>\n              {name}{' '} \n              <i \n                onClick={this.onShowClick} \n                className='fas fa-sort-down'\n                style={{cursor: 'pointer'}} \n              />\n              <i \n                className='fas fa-times' \n                style={{cursor: 'pointer', float: 'right', color: 'red'}}\n                onClick={this.onDeleteClick.bind(this, id, dispatch)}\n              />\n\n              <Link to={`contact/edit/${id}`} >\n                <i \n                className='fas fa-pencil-alt'\n                style={{\n                  cursor: 'pointer',\n                  float: 'right',\n                  color: 'black',\n                  marginRight: '1rem'\n                }}\n                >\n                </i>\n              </Link>\n              \n              </h4>\n              {showContactInfo ? (\n                <ul className='list-group'>\n                <li className='list-group-item'>Email: {email}</li>\n                <li className='list-group-item'>Phone: {phone}</li>\n                </ul>\n                ) : null}\n            </div>\n          )\n        }}\n      </Consumer>\n      );\n    }\n}\n\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n}\n\nexport default Contact;","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { Consumer } from '../../context'\n\nclass Contacts extends Component {\n  \n  render(){\n    return (\n      <Consumer>\n\n        {value => {\n          const { contacts } = value\n          return (\n            <React.Fragment>\n              <h1 className='display-4 mb-2'><span className='text-danger'>Contact</span> List</h1>\n              {contacts.map(contact => (\n                <Contact \n                  key={contact.id}\n                  contact={contact} \n                />\n              ))}\n      </React.Fragment>\n          )\n          }}\n      </Consumer>\n    )\n  }\n}\n\nexport default Contacts;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n\n  return (\n    <div className='form-group'>\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name} \n        className={classnames('form-control form-control-lg', {\n          'is-invalid': error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className='invalid-feedback'>{error}</div>}\n      \n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n}\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n}\n\nexport default TextInputGroup","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup'\nimport axios from 'axios'\n\nclass AddContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  }\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    \n    const { name, email, phone } = this.state;\n\n    // Check For Errors\n    if(name === '') {\n      this.setState({errors: { name: 'Name is required'}})\n      return;\n    }\n\n    if(email === '') {\n      this.setState({errors: { email: 'Email is required'}})\n      return;\n    }\n\n    if(phone === '') {\n      this.setState({errors: { phone: 'Phone is required'}})\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone\n    }\n\n    const res = await axios.post\n    ('https://jsonplaceholder.typicode.com/users', newContact);\n\n    dispatch({type: 'ADD_CONTACT', payload: res.data});\n\n\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n  };\n  \n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className='card mb-3'>\n              <div className='card-header'>Add Contact</div>\n              <div className='card-body'>\n                <form onSubmit= {this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup \n                    label='Name'\n                    name='name'\n                    placeholder='Enter Name'\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />  \n\n                  <TextInputGroup \n                    label='Email'\n                    name='email'\n                    type='email'\n                    placeholder='Enter Email'\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />  \n\n                  <TextInputGroup \n                    label='Phone'\n                    name='phone'\n                    placeholder='Enter Phone Number'\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  /> \n                  \n                  <input \n                    type='submit'\n                    value='Add Contact'\n                    className='btn btn-light btn-block'\n                  />\n              </form>\n            </div>\n          </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default AddContact;","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup'\nimport axios from 'axios'\n\nclass EditContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  }\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get\n    \n    (`https://jsonplaceholder.typicode.com/users/${id}`);\n\n    const contact = res.data;\n\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n\n  }\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    \n    const { name, email, phone } = this.state;\n\n    // Check For Errors\n    if(name === '') {\n      this.setState({errors: { name: 'Name is required'}})\n      return;\n    }\n\n    if(email === '') {\n      this.setState({errors: { email: 'Email is required'}})\n      return;\n    }\n\n    if(phone === '') {\n      this.setState({errors: { phone: 'Phone is required'}})\n      return;\n    }\n\n    const updContact = {\n      name,\n      email,\n      phone\n    }\n\n    const { id } = this.props.match.params;\n\n    const res = await axios.put\n    (`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\n\n    dispatch({type: 'UPDATE_CONTACT', payload: res.data});\n\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n  };\n  \n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className='card mb-3'>\n              <div className='card-header'>Edit Contact</div>\n              <div className='card-body'>\n                <form onSubmit= {this.onSubmit.bind(this, dispatch)}>\n\n                  <TextInputGroup \n                    label='Name'\n                    name='name'\n                    placeholder='Enter Name'\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />  \n\n                  <TextInputGroup \n                    label='Email'\n                    name='email'\n                    type='email'\n                    placeholder='Enter Email'\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />  \n\n                  <TextInputGroup \n                    label='Phone'\n                    name='phone'\n                    placeholder='Enter Phone Number'\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  /> \n                  \n                  <input \n                    type='submit'\n                    value='Update Contact'\n                    className='btn btn-light btn-block'\n                  />\n              </form>\n            </div>\n          </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default EditContact;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = (props) => {\n  const { branding } = props;\n  return (\n    <nav className='navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0'>\n      <div className='container'>\n        <a href='/' className='navbar-brand'>\n        {branding}</a>\n        <div>\n          <ul className='navbar-nav mr-auto'>\n            <li className='nav-item'>\n              <Link to='/' className='nav-link'>\n               <i className='fas fa-home' /> Home\n              </Link>\n            </li>\n            <li className='nav-item'>\n              <Link to='/contact/add' className='nav-link'>\n                <i className='fas fa-plus' /> Add\n              </Link>\n            </li>\n            <li className='nav-item'>\n              <Link to='/about' className='nav-link'>\n                <i className='fas fa-question' /> About\n              </Link>\n            </li>\n          </ul> \n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: 'My App'\n}\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n}\n\n\nexport default Header;","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className='display-4'>About Contact Manager</h1>\n      <p className='lead'>Simple app to manage contacts</p>\n      <p className='text-secondary'>Version 1.0.0</p>\n    </div>\n  )\n}","import React from 'react'\n\nexport default () => {\n  return (\n    <div>\n      <h1 className='display-4'><span className='text-danger'>404</span> Page Not Found</h1>\n      <p className='lead'>Sorry, that page does not exist</p>\n    </div>\n  );\n  };\n\n","import React, { Component } from 'react';\n\nclass Test extends Component {\n  componentDidMount() {\n    console.log('componentDidMount...');\n  }\n\n  componentWillMount() {\n    console.log('componentWillMount...')\n  }\n\n  componentDidUpdate() {\n    console.log('comopnentDidUpdate...')\n  }\n  \n  render() {\n    return (\n      <div>\n        <h1>Test Component</h1>\n      </div>\n    )\n  }\n}\n\nexport default Test;","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound1 from './components/pages/NotFound1';\nimport Test from './components/Test/Test';\n\n\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding='Contact Manager' />\n            <div className='container'>\n              <Switch>\n                <Route exact path='/' component= {Contacts} />\n                <Route exact path='/contact/add' component= {AddContact} />\n                <Route exact path='/contact/edit/:id' component= {EditContact} />\n                <Route exact path='/about' component= {About} />\n                <Route exact path='/test' component= {Test} />\n                <Route component={NotFound1} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}